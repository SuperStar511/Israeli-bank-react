name: Build/Release

on:
  push:
    branches: master

jobs:
  release:

    runs-on: ${{ matrix.os }}

    # Platforms to build on/for
    strategy:
      matrix:
        os: [windows-2019, ubuntu-18.04]

    steps:
    - uses: actions/checkout@v1
    - name: Set version in Env
      shell: bash
      run: |
        echo ::set-env name=package_version::`awk -F ':' '/version/ {print $2}' package.json | sed 's/\"//g' | sed 's/,//g' | sed 's/ //g'`
        echo "Version is `awk -F ':' '/version/ {print $2}' package.json | sed 's/\"//g' | sed 's/,//g' | sed 's/ //g'`"
    - uses: actions/github-script@0.3.0
      name: Check if current version is a published release (by release tag)
      id: check_release
      with:
        github-token: ${{secrets.GITHUB_TOKEN}}
        # debug: true
        script: |
          const result = await github.repos.listReleases({
            owner: 'baruchiro',
            repo: 'israeli-bank-scrapers-desktop'
          })
          // console.log(result)
          const release_tags = result.data.filter(release => !release.draft).map(release => release.tag_name)
          // console.log(release_tags)
          const publishToRelease = !release_tags.includes('v${{ env.package_version }}')
          console.log('publishToRelease: ' + publishToRelease)
          return publishToRelease
    - name: Install Node.js, NPM and Yarn
      uses: actions/setup-node@v1
      with:
        node-version: 10
    - name: Install Snapcraft
      uses: samuelmeuli/action-snapcraft@2a2b003682661733922241b9af1c4c1c789f30f1
      # Only install Snapcraft  on Ubuntu
      if: startsWith(matrix.os, 'ubuntu')
      with:
        # Log in to  Snap Store
        snapcraft_token: ${{ secrets.snapcraft_token }}
    - name: Build & release Electron app
      env:
        GOOGLE_SERVICE_PRIVATE_KEY: ${{ secrets.GOOGLE_SERVICE_PRIVATE_KEY }}
        GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      if: steps.check_release.outputs.result
      run: |
        yarn
        yarn build --publish onTagOrDraft
